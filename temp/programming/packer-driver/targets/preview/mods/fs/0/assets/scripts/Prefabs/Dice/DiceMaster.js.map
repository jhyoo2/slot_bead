{"version":3,"sources":["file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Dice/DiceMaster.ts"],"names":["_decorator","Component","Node","instantiate","Vec3","Sprite","Label","tween","AssetManager","DiceIcon","ccclass","property","DiceMaster","first","second","initDiceMaster","diceData","assetManager","getInstance","iconNum","i","diceIdx","startIdx","iconObject","prefabDic","node","insertChild","setPosition","getDicePlace","iconScript","getComponent","Number","iconKind","Math","floor","random","backKind","initIcon","updateNumber","iconArray","push","newPlayer","getPosition","newSprite","addComponent","spriteFrame","assetDic","player","playerIdx","diceNum","railNum","abs","rowNum","blockSize","x","basePos","y","addIcon","lastIcon","length","lastIconIdx","lastPos","prePos","postPos","z","movePlayer","time","playerPos","to","position","start","getNextBlock","sleep","t","Promise","resolve","setTimeout","rollWithNetwork","diceNumbers","diceManager","getDiceResult","rollWithRandom","labelNode","label","fontSize","lineHeight","string","scale","call","delay","removeFromParent","rollWithFixed","iconDatas","moveBlock","yPos","j","destroy","splice","by"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  Node,\n  size,\n  UITransform,\n  instantiate,\n  Size,\n  Vec3,\n  Sprite,\n  Label,\n  tween,\n  Tween,\n} from \"cc\";\nconst { ccclass, property } = _decorator;\n\nimport AssetManager from \"../../DataManager/AssetManager\";\nimport DiceManager from \"../DiceManager\";\nimport DiceIcon from \"./DiceIcon\";\n\n@ccclass(\"DiceMaster\")\nexport default class DiceMaster extends Component {\n  @property(Node)\n  backNode: Node | null = null;\n  assetManager: AssetManager = null;\n  diceManager: DiceManager = null;\n  diceData: {\n    startIdx: number;\n    basePos: Vec3;\n    blockSize: Vec3;\n    radius: number;\n    iconNum: number;\n    iconSize: Size;\n  };\n  diceNumbers = { first: 0, second: 0 };\n  iconArray = [];\n  player = null;\n  playerIdx = 0;\n\n  initDiceMaster(diceData) {\n    this.assetManager = AssetManager.getInstance();\n    this.diceData = diceData;\n    diceData.iconNum = 16;\n    for (var i = -6; i < diceData.iconNum; i++) {\n      const diceIdx = i + diceData.startIdx;\n      const iconObject = instantiate(this.assetManager.prefabDic[\"DiceIcon\"]);\n      this.node.insertChild(iconObject, 0);\n      iconObject.setPosition(this.getDicePlace(diceIdx));\n      const iconScript: DiceIcon = iconObject.getComponent(\"DiceIcon\");\n      iconScript.diceIdx = Number(diceIdx);\n      const iconKind = Math.floor(Math.random() * 5) + 1;\n      const backKind = Math.floor(Math.random() * 3) + 1;\n      iconScript.initIcon(iconKind, backKind, this.diceData);\n      iconScript.updateNumber(diceIdx);\n      this.iconArray.push(iconObject);\n    }\n    const newPlayer = new Node();\n    newPlayer.setPosition(this.iconArray[6].getPosition());\n    const newSprite = newPlayer.addComponent(Sprite);\n    newSprite.spriteFrame = this.assetManager.assetDic[\"Slot/pig\"];\n    this.node.insertChild(newPlayer, 30);\n    this.player = newPlayer;\n    this.playerIdx = diceData.startIdx;\n  }\n  getDicePlace(diceNum): Vec3 {\n    const railNum =\n      diceNum >= 0\n        ? Math.floor(diceNum / 4)\n        : Math.floor(Math.abs(diceNum + 1) / 4) + 1;\n    if (railNum % 2 == 0) {\n      const rowNum = diceNum >= 0 ? diceNum % 4 : (diceNum + 8) % 4;\n      // console.log(\"1\", diceNum, railNum, rowNum);\n      return new Vec3(\n        210 + this.diceData.blockSize.x * rowNum - 540,\n        this.diceData.basePos.y +\n          this.diceData.blockSize.y * (diceNum - this.diceData.startIdx),\n        0\n      );\n    } else {\n      const rowNum = diceNum >= 0 ? diceNum % 4 : (diceNum + 8) % 4;\n      // console.log(\"2\", diceNum, railNum, rowNum);\n      return new Vec3(\n        1080 - 210 - this.diceData.blockSize.x * rowNum - 540,\n        this.diceData.basePos.y +\n          this.diceData.blockSize.y * (diceNum - this.diceData.startIdx),\n        0\n      );\n    }\n  }\n  addIcon() {\n    const lastIcon = this.iconArray[this.iconArray.length - 1];\n    const lastIconIdx = lastIcon.getComponent(DiceIcon).diceIdx;\n    const lastPos = lastIcon.getPosition();\n    const prePos = this.getDicePlace(lastIconIdx);\n    const postPos = this.getDicePlace(lastIconIdx + 1);\n\n    const iconObject = instantiate(this.assetManager.prefabDic[\"DiceIcon\"]);\n    this.node.insertChild(iconObject, 0);\n    iconObject.setPosition(\n      new Vec3(\n        lastPos.x + (postPos.x - prePos.x),\n        lastPos.y + (postPos.y - prePos.y),\n        lastPos.z + (postPos.z - prePos.z)\n      )\n    );\n    const iconScript: DiceIcon = iconObject.getComponent(DiceIcon);\n    iconScript.diceIdx = lastIconIdx + 1;\n    const iconKind = Math.floor(Math.random() * 5) + 1;\n    const backKind = Math.floor(Math.random() * 3) + 1;\n    iconScript.initIcon(iconKind, backKind, this.diceData);\n    iconScript.updateNumber(iconScript.diceIdx);\n    this.iconArray.push(iconObject);\n  }\n  movePlayer(time) {\n    this.playerIdx++;\n    const postPos = this.getDicePlace(this.playerIdx);\n    const playerPos = this.player.getPosition();\n    tween(this.player)\n      .to(time, { position: new Vec3(postPos.x, playerPos.y, playerPos.z) })\n      .start();\n  }\n  getNextBlock() {\n    for (var i in this.iconArray) {\n      const iconObject = this.iconArray[i];\n      const iconScript: DiceIcon = iconObject.getComponent(DiceIcon);\n      if (iconScript.diceIdx == this.playerIdx + 1) {\n        return iconObject;\n      }\n    }\n  }\n\n  sleep(t) {\n    return new Promise((resolve) => setTimeout(resolve, t));\n  }\n  async rollWithNetwork() {\n    await this.sleep(1000);\n    this.diceNumbers.first = Math.floor(Math.random() * 6) + 1;\n    this.diceNumbers.second = Math.floor(Math.random() * 6) + 1;\n    if (this.diceData) {\n      this.diceManager.getDiceResult(this.diceNumbers);\n    }\n  }\n\n  rollWithRandom() {\n    this.diceNumbers.first = Math.floor(Math.random() * 6) + 1;\n    this.diceNumbers.second = Math.floor(Math.random() * 6) + 1;\n    const labelNode = new Node();\n    labelNode.setPosition(540, 300, 0);\n    this.node.insertChild(labelNode, 30);\n    const label = labelNode.addComponent(Label);\n    label.fontSize = 100;\n    label.lineHeight = 100;\n    label.string = this.diceNumbers.first + \" | \" + this.diceNumbers.second;\n    tween(labelNode)\n      .to(0.5, { scale: new Vec3(1.5, 1.5, 1) })\n      .to(0.5, { scale: new Vec3(1.0, 1.0, 1) })\n      .call(() => {\n        // this.movePlayer(1);\n        // this.movePlayer(this.diceNumbers.first + this.diceNumbers.second);\n      })\n      .delay(2.0)\n      .call(() => {\n        labelNode.removeFromParent();\n      })\n      .start();\n  }\n  rollWithFixed(iconDatas) {}\n\n  moveBlock(time, yPos) {\n    this.addIcon();\n    for (var j in this.iconArray) {\n      const iconObject = this.iconArray[j];\n      if (iconObject.getPosition().y <= -500) {\n        iconObject.removeFromParent();\n        iconObject.destroy();\n        this.iconArray.splice(Number(j), 1);\n        continue;\n      }\n      tween(iconObject)\n        .by(time, { position: new Vec3(0, yPos, 0) })\n        .start();\n    }\n  }\n}\n"]}
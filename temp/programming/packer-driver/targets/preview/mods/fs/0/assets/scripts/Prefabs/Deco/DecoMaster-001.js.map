{"version":3,"sources":["file:///Users/david/Desktop/David/cocos/slot_deco/assets/scripts/Prefabs/Deco/DecoMaster-001.ts"],"names":["_decorator","Component","Node","Slider","ToggleComponent","ccclass","property","DecoMaster","onLoad","kindScript","kindNode","getComponent","setDataList","tag","label","callback","idx","decoData","setDecoData","placeScript","placeNode","anchorScript","anchorNode","pointScript","pointNode","vec","sizeScript","sizeNode","stackSizeScript","stackSizeNode","update","dt","setLabel","decoType","placeType","anchorType","decoPoint","decoSize","stackableScript","stackToggleNode","isChecked","stackable","kind","obj","sceneScript","resetDecoObject","resetLabel","opacityNode","progress","eraseClicked","eraseDeco","sliderEvent","node","toggleEvent"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Slider, ToggleComponent } from \"cc\";\nimport { RoomScene, Deco } from \"../../Scenes/RoomScene\";\nimport ListView from \"./ListView\";\nimport VectorList from \"./VectorList\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"DecoMaster\")\nexport default class DecoMaster extends Component {\n  @property(Node)\n  kindNode: Node | null = null;\n  @property(Node)\n  placeNode: Node | null = null;\n  @property(Node)\n  anchorNode: Node | null = null;\n  @property(Node)\n  pointNode: Node | null = null;\n  @property(Node)\n  sizeNode: Node | null = null;\n  @property(Node)\n  opacityNode: Node | null = null;\n  @property(Node)\n  stackToggleNode: Node | null = null;\n  @property(Node)\n  stackSizeNode: Node | null = null;\n  sceneScript: RoomScene = null;\n  decoData: Deco = null;\n  async onLoad() {\n    const kindScript = this.kindNode.getComponent(\"ListView\") as ListView;\n    // console.log(this.kindNode);\n    kindScript.setDataList([\n      { tag: \"00\", label: \"미설정\" },\n      { tag: \"01\", label: \"바닥\" },\n      { tag: \"02\", label: \"벽지\" },\n      { tag: \"03\", label: \"세입자\" },\n      { tag: \"04\", label: \"가구\" },\n      { tag: \"05\", label: \"가전\" },\n      { tag: \"06\", label: \"기타\" },\n    ]);\n    kindScript.callback = (idx) => {\n      if (!this.decoData) {\n        return false;\n      }\n      this.setDecoData(\"decoType\", idx);\n      return true;\n    };\n    const placeScript = this.placeNode.getComponent(\"ListView\") as ListView;\n    placeScript.setDataList([\n      { tag: \"00\", label: \"미설정\" },\n      { tag: \"01\", label: \"바닥\" },\n      { tag: \"02\", label: \"좌측 벽\" },\n      { tag: \"03\", label: \"우측 벽\" },\n      { tag: \"04\", label: \"양측 벽\" },\n    ]);\n    placeScript.callback = (idx) => {\n      this.setDecoData(\"placeType\", idx);\n    };\n    const anchorScript = this.anchorNode.getComponent(\"ListView\") as ListView;\n    anchorScript.setDataList([\n      { tag: \"00\", label: \"중앙\" },\n      { tag: \"01\", label: \"아래쪽\" },\n      { tag: \"02\", label: \"왼쪽\" },\n      { tag: \"03\", label: \"오른쪽\" },\n    ]);\n    anchorScript.callback = (idx) => {\n      this.setDecoData(\"anchorType\", idx);\n    };\n    const pointScript = this.pointNode.getComponent(\"VectorList\") as VectorList;\n    pointScript.callback = (vec) => {\n      this.setDecoData(\"decoPoint\", vec);\n    };\n    const sizeScript = this.sizeNode.getComponent(\"VectorList\") as VectorList;\n    sizeScript.callback = (vec) => {\n      this.setDecoData(\"decoSize\", vec);\n    };\n    const stackSizeScript = this.stackSizeNode.getComponent(\n      \"VectorList\"\n    ) as VectorList;\n    stackSizeScript.callback = (vec) => {\n      this.setDecoData(\"stackSize\", vec);\n    };\n  }\n  update(dt) {\n    if (this.decoData) {\n      const kindScript = this.kindNode.getComponent(\"ListView\") as ListView;\n      kindScript.setLabel(this.decoData.decoType);\n      const placeScript = this.placeNode.getComponent(\"ListView\") as ListView;\n      placeScript.setLabel(this.decoData.placeType);\n      const anchorScript = this.anchorNode.getComponent(\"ListView\") as ListView;\n      anchorScript.setLabel(this.decoData.anchorType);\n      const pointScript = this.pointNode.getComponent(\"VectorList\") as ListView;\n      pointScript.setLabel(this.decoData.decoPoint);\n      const sizeScript = this.sizeNode.getComponent(\"VectorList\") as ListView;\n      sizeScript.setLabel(this.decoData.decoSize);\n      const stackableScript = this.stackToggleNode.getComponent(\n        ToggleComponent\n      ) as ToggleComponent;\n      stackableScript.isChecked = this.decoData.stackable;\n    }\n  }\n  setDecoData(kind, obj) {\n    if (this.sceneScript && this.decoData) {\n      this.sceneScript.setDecoData(kind, obj);\n    }\n  }\n  resetDecoObject() {\n    this.decoData = null;\n    const kindScript = this.kindNode.getComponent(\"ListView\") as ListView;\n    kindScript.resetLabel();\n    const placeScript = this.placeNode.getComponent(\"ListView\") as ListView;\n    placeScript.resetLabel();\n    const anchorScript = this.anchorNode.getComponent(\"ListView\") as ListView;\n    anchorScript.resetLabel();\n    const pointScript = this.pointNode.getComponent(\"VectorList\") as ListView;\n    pointScript.resetLabel();\n    const sizeScript = this.sizeNode.getComponent(\"VectorList\") as ListView;\n    sizeScript.resetLabel();\n    this.opacityNode.getComponent(Slider).progress = 1.0;\n    // console.log(this.decoData);\n  }\n  eraseClicked() {\n    if (this.sceneScript && this.decoData) {\n      this.sceneScript.eraseDeco();\n    }\n  }\n  sliderEvent(node, kind) {\n    if (kind == \"opacity\") {\n      this.setDecoData(\"opacity\", {\n        tag: this.opacityNode.getComponent(Slider).progress,\n      });\n    }\n  }\n  toggleEvent(node, kind) {\n    this.setDecoData(\"stackable\", { tag: node.isChecked });\n  }\n}\n"]}
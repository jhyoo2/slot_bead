{"version":3,"sources":["file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Scenes/BeadNode.ts"],"names":["_decorator","Node","Vec2","RigidBody2D","SpriteFrame","Sprite","UIOpacityComponent","Collider2D","Contact2DType","BaseScene","ccclass","property","BeadNode","Date","onLoad","coverNode","active","myColor","Math","floor","random","node","getComponent","spriteFrame","beadFrame","collider","on","BEGIN_CONTACT","onBeginContact","selfCollider","otherCollider","contact","myRigid","linearVelocity","max","maxVelocity","x","y","addRandomForce","beadStart","startTime","bidRigid","myForce","applyForce","diminishVelocity","rate","update","dt","myIdx","time","getTime","sqrt","pow","maxForce","preVelo","angularVelocity","opacity"],"mappings":"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","sourcesContent":["import {\r\n  _decorator,\r\n  size,\r\n  director,\r\n  Node,\r\n  PhysicsSystem2D,\r\n  Vec2,\r\n  PHYSICS_2D_PTM_RATIO,\r\n  EPhysics2DDrawFlags,\r\n  RigidBody,\r\n  Vec3,\r\n  RigidBody2D,\r\n  Prefab,\r\n  instantiate,\r\n  SpriteFrame,\r\n  Sprite,\r\n  UIOpacityComponent,\r\n  Collider2D,\r\n  Contact2DType,\r\n  IPhysics2DContact,\r\n} from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\nimport BaseScene from \"../BaseObject/BaseScene\";\r\nimport AssetManager from \"../DataManager/AssetManager\";\r\nimport BaseRoom from \"../Prefabs/Room/BaseRoom\";\r\n\r\n@ccclass(\"BeadNode\")\r\nexport class BeadNode extends BaseScene {\r\n  beadStart = false;\r\n  myForce = 0;\r\n  myColor = 0;\r\n  myIdx = 0;\r\n\r\n  @property(Node)\r\n  coverNode: Node | null = null;\r\n\r\n  @property(SpriteFrame)\r\n  beadFrame: SpriteFrame[] = [];\r\n\r\n  maxForce = 0;\r\n  maxVelocity = new Vec2(0, 0);\r\n  startTime = new Date();\r\n\r\n  async onLoad() {\r\n    super.onLoad();\r\n    this.coverNode.active = true;\r\n    const myColor = Math.floor(Math.random() * 5) + 1;\r\n    this.node.getComponent(Sprite).spriteFrame = this.beadFrame[myColor];\r\n    let collider = this.getComponent(Collider2D);\r\n    if (collider) {\r\n      collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n    }\r\n  }\r\n\r\n  onBeginContact(\r\n    selfCollider: Collider2D,\r\n    otherCollider: Collider2D,\r\n    contact: IPhysics2DContact | null\r\n  ) {\r\n    // if (this.beadStart) {\r\n    //   const myColor = Math.floor(Math.random() * 5) + 1;\r\n    //   this.node.getComponent(Sprite).spriteFrame = this.beadFrame[myColor];\r\n    // }\r\n    if (otherCollider.node.getComponent(BeadNode)) {\r\n      const myRigid = this.node.getComponent(RigidBody2D);\r\n      myRigid.linearVelocity = new Vec2(\r\n        Math.max(this.maxVelocity.x, myRigid.linearVelocity.x * 2.2),\r\n        Math.max(this.maxVelocity.y, myRigid.linearVelocity.y * 2.2)\r\n      );\r\n    }\r\n  }\r\n\r\n  addRandomForce() {\r\n    this.beadStart = true;\r\n    this.startTime = new Date();\r\n    const bidRigid = this.node.getComponent(RigidBody2D);\r\n    const myForce = new Vec2(\r\n      -40000 + 80000 * Math.random(),\r\n      90000 + 30000 * Math.random()\r\n    );\r\n    bidRigid.applyForce(\r\n      myForce,\r\n      new Vec2(myForce.x / 100, myForce.y / 100),\r\n      true\r\n    );\r\n  }\r\n\r\n  diminishVelocity(rate) {\r\n    const bidRigid = this.node.getComponent(RigidBody2D);\r\n    bidRigid.linearVelocity = new Vec2(\r\n      bidRigid.linearVelocity.x * rate,\r\n      bidRigid.linearVelocity.y * rate\r\n    );\r\n    this.maxVelocity = new Vec2(\r\n      this.maxVelocity.x * rate,\r\n      this.maxVelocity.y * rate\r\n    );\r\n  }\r\n\r\n  update(dt) {\r\n    if (!this.beadStart) {\r\n      return;\r\n    }\r\n    const bidRigid = this.node.getComponent(RigidBody2D);\r\n    if (this.myIdx < 2) {\r\n      const time = (new Date().getTime() - this.startTime.getTime()) / 1000;\r\n      if (time >= this.myIdx + 1) {\r\n        this.coverNode.active = false;\r\n      }\r\n    }\r\n\r\n    const myForce = Math.sqrt(\r\n      Math.pow(bidRigid.linearVelocity.x, 2) +\r\n        Math.pow(bidRigid.linearVelocity.y, 2)\r\n    );\r\n    if (this.maxForce < myForce) {\r\n      this.maxForce = myForce;\r\n      this.maxVelocity = new Vec2(\r\n        bidRigid.linearVelocity.x,\r\n        bidRigid.linearVelocity.y\r\n      );\r\n    }\r\n    this.myForce += myForce;\r\n    if (myForce > 0) {\r\n      const preVelo = bidRigid.linearVelocity;\r\n      if (myForce <= 0.1) {\r\n        bidRigid.linearVelocity = new Vec2(0, 0);\r\n        bidRigid.angularVelocity = 0;\r\n        this.coverNode.getComponent(UIOpacityComponent).opacity = 0;\r\n        this.beadStart = false;\r\n      } else if (myForce > 10) {\r\n        bidRigid.linearVelocity = new Vec2(\r\n          preVelo.x * 0.9975,\r\n          preVelo.y * 0.9975\r\n        );\r\n      } else if (myForce > 1) {\r\n        bidRigid.linearVelocity = new Vec2(\r\n          preVelo.x * 0.985,\r\n          preVelo.y * 0.985\r\n        );\r\n      } else {\r\n        bidRigid.linearVelocity = new Vec2(preVelo.x * 0.95, preVelo.y * 0.95);\r\n      }\r\n      if (myForce <= 3 && this.myIdx == 2) {\r\n        this.coverNode.getComponent(UIOpacityComponent).opacity =\r\n          (myForce / 3) * 255;\r\n      }\r\n    }\r\n    // console.log(myForce);\r\n  }\r\n}\r\n"]}
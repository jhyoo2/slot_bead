{"version":3,"sources":["file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/DiceManager.ts"],"names":["_decorator","Component","instantiate","AssetManager","ccclass","property","DiceManager","initDiceManager","diceData","assetManager","getInstance","diceObject","prefabDic","setPosition","diceScript","getComponent","diceManager","initDiceMaster","rollWithNetwork","rolling","rollWithRandom","rollWithFixed","iconDatas","getDiceResult","diceResult","eventTarget","showDiceResult","moveBlock","time","yPos","movePlayer","getPlayerIdx","playerIdx","getNextBlock"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;;AAGzBC,MAAAA,Y;;;;;;;OAFD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;yBAOTM,W,WADpBF,OAAO,CAAC,aAAD,C,yBAAR,MACqBE,WADrB,SACyCL,SADzC,CACmD;AAAA;AAAA;;AAAA,gDACpB,IADoB;;AAAA,+CAExB,IAFwB;;AAAA,8CAGpC,IAHoC;;AAAA,2CAIvC,KAJuC;AAAA;;AAKjDM,QAAAA,eAAe,CAACC,QAAD,EAAW;AACxB,eAAKC,YAAL,GAAoB;AAAA;AAAA,4CAAaC,WAAb,EAApB;AACA,gBAAMC,UAAU,GAAGT,WAAW,CAAC,KAAKO,YAAL,CAAkBG,SAAlB,CAA4B,YAA5B,CAAD,CAA9B;AACAD,UAAAA,UAAU,CAACE,WAAX,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B;AACA,gBAAMC,UAAU,GAAGH,UAAU,CAACI,YAAX,CAAwB,YAAxB,CAAnB;AACAD,UAAAA,UAAU,CAACE,WAAX,GAAyB,IAAzB;AACAF,UAAAA,UAAU,CAACG,cAAX,CAA0BT,QAA1B;AACA,eAAKG,UAAL,GAAkBA,UAAlB;AACA,iBAAOA,UAAP;AACD;;AACDO,QAAAA,eAAe,GAAG;AAChB,cAAI,KAAKC,OAAT,EAAkB;AAClB,eAAKA,OAAL,GAAe,IAAf;AACA,gBAAML,UAAU,GAAG,KAAKH,UAAL,CAAgBI,YAAhB,CAA6B,YAA7B,CAAnB;AACAD,UAAAA,UAAU,CAACI,eAAX;AACD;;AACDE,QAAAA,cAAc,GAAG;AACf,cAAI,KAAKD,OAAT,EAAkB;AAClB,eAAKA,OAAL,GAAe,IAAf;AACA,gBAAML,UAAU,GAAG,KAAKH,UAAL,CAAgBI,YAAhB,CAA6B,YAA7B,CAAnB;AACAD,UAAAA,UAAU,CAACM,cAAX;AACD;;AACDC,QAAAA,aAAa,CAACC,SAAD,EAAY;AACvB,cAAI,KAAKH,OAAT,EAAkB;AAClB,eAAKA,OAAL,GAAe,IAAf;AACA,gBAAML,UAAU,GAAG,KAAKH,UAAL,CAAgBI,YAAhB,CAA6B,YAA7B,CAAnB;AACAD,UAAAA,UAAU,CAACO,aAAX,CAAyBC,SAAzB;AACD;;AACDC,QAAAA,aAAa,CAACC,UAAD,EAAa;AACxB,eAAKL,OAAL,GAAe,KAAf;;AACA,cAAI,KAAKM,WAAL,IAAoB,KAAKA,WAAL,CAAiBC,cAAzC,EAAyD;AACvD,iBAAKD,WAAL,CAAiBC,cAAjB,CAAgCF,UAAhC;AACD,WAJuB,CAKxB;;AACD;;AACDG,QAAAA,SAAS,CAACC,IAAD,EAAOC,IAAP,EAAa;AACpB,gBAAMf,UAAU,GAAG,KAAKH,UAAL,CAAgBI,YAAhB,CAA6B,YAA7B,CAAnB;AACAD,UAAAA,UAAU,CAACa,SAAX,CAAqBC,IAArB,EAA2BC,IAA3B;AACAf,UAAAA,UAAU,CAACgB,UAAX,CAAsBF,IAAtB;AACD;;AACDG,QAAAA,YAAY,GAAG;AACb,gBAAMjB,UAAU,GAAG,KAAKH,UAAL,CAAgBI,YAAhB,CAA6B,YAA7B,CAAnB;AACA,iBAAOD,UAAU,CAACkB,SAAlB;AACD;;AACDC,QAAAA,YAAY,GAAG;AACb,gBAAMnB,UAAU,GAAG,KAAKH,UAAL,CAAgBI,YAAhB,CAA6B,YAA7B,CAAnB;AACA,iBAAOD,UAAU,CAACmB,YAAX,EAAP;AACD;;AApDgD,O","sourcesContent":["import { _decorator, Component, instantiate } from \"cc\";\nconst { ccclass, property } = _decorator;\n\nimport AssetManager from \"../DataManager/AssetManager\";\nimport { DiceScene } from \"../Scenes/DiceScene\";\nimport DiceMaster from \"./Dice/DiceMaster\";\n\n@ccclass(\"DiceManager\")\nexport default class DiceManager extends Component {\n  assetManager: AssetManager = null;\n  eventTarget: DiceScene = null;\n  diceObject = null;\n  rolling = false;\n  initDiceManager(diceData) {\n    this.assetManager = AssetManager.getInstance();\n    const diceObject = instantiate(this.assetManager.prefabDic[\"DiceMaster\"]);\n    diceObject.setPosition(0, 0, 0);\n    const diceScript = diceObject.getComponent(\"DiceMaster\") as DiceMaster;\n    diceScript.diceManager = this;\n    diceScript.initDiceMaster(diceData);\n    this.diceObject = diceObject;\n    return diceObject;\n  }\n  rollWithNetwork() {\n    if (this.rolling) return;\n    this.rolling = true;\n    const diceScript = this.diceObject.getComponent(\"DiceMaster\") as DiceMaster;\n    diceScript.rollWithNetwork();\n  }\n  rollWithRandom() {\n    if (this.rolling) return;\n    this.rolling = true;\n    const diceScript = this.diceObject.getComponent(\"DiceMaster\") as DiceMaster;\n    diceScript.rollWithRandom();\n  }\n  rollWithFixed(iconDatas) {\n    if (this.rolling) return;\n    this.rolling = true;\n    const diceScript = this.diceObject.getComponent(\"DiceMaster\") as DiceMaster;\n    diceScript.rollWithFixed(iconDatas);\n  }\n  getDiceResult(diceResult) {\n    this.rolling = false;\n    if (this.eventTarget && this.eventTarget.showDiceResult) {\n      this.eventTarget.showDiceResult(diceResult);\n    }\n    // // console.log(slotResult);\n  }\n  moveBlock(time, yPos) {\n    const diceScript = this.diceObject.getComponent(\"DiceMaster\") as DiceMaster;\n    diceScript.moveBlock(time, yPos);\n    diceScript.movePlayer(time);\n  }\n  getPlayerIdx() {\n    const diceScript = this.diceObject.getComponent(\"DiceMaster\") as DiceMaster;\n    return diceScript.playerIdx;\n  }\n  getNextBlock() {\n    const diceScript = this.diceObject.getComponent(\"DiceMaster\") as DiceMaster;\n    return diceScript.getNextBlock();\n  }\n}\n"]}
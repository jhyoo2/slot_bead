{"version":3,"sources":["file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Scenes/PinballScene.ts"],"names":["_decorator","Node","PhysicsSystem2D","Vec2","Vec3","RigidBody2D","Prefab","instantiate","tween","BaseScene","BeadNode","ccclass","property","PinballScene","Date","onLoad","instance","enable","gravity","rollButtonClicked","console","log","myForce","coinNum","roolStart","myTime","beadArray","length","myBead","removeFromParent","destroy","splice","vecArray","i","beadNode","beadPrefab","nodeLayer","addChild","setPosition","push","getComponent","addRandomForce","onTouchStart","event","bidRigid","applyForce","Number","update","dt","totalForce","Math","sqrt","pow","linearVelocity","x","y","realStart","moveMonster","getTime","timeDiff","diminishVelocity","addGold","gold","monsterArray","monster","direction","floor","random","by","position","start"],"mappings":"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","sourcesContent":["import {\r\n  _decorator,\r\n  size,\r\n  director,\r\n  Node,\r\n  PhysicsSystem2D,\r\n  Vec2,\r\n  PHYSICS_2D_PTM_RATIO,\r\n  EPhysics2DDrawFlags,\r\n  RigidBody,\r\n  Vec3,\r\n  RigidBody2D,\r\n  Prefab,\r\n  instantiate,\r\n  tween,\r\n} from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\nimport BaseScene from \"../BaseObject/BaseScene\";\r\nimport AssetManager from \"../DataManager/AssetManager\";\r\nimport BaseRoom from \"../Prefabs/Room/BaseRoom\";\r\nimport { BeadNode } from \"./BeadNode\";\r\n\r\n@ccclass(\"PinballScene\")\r\nexport class PinballScene extends BaseScene {\r\n  assetManager: AssetManager = null;\r\n\r\n  @property(Node)\r\n  nodeLayer: Node | null = null;\r\n\r\n  @property(Prefab)\r\n  beadPrefab: Prefab | null = null;\r\n\r\n  @property(Node)\r\n  beadArray: Node[] = [];\r\n\r\n  @property(Node)\r\n  monsterArray: Node[] = [];\r\n\r\n  myForce = 0;\r\n  myTime: Date = new Date();\r\n  roolStart = false;\r\n  realStart = false;\r\n  coinNum = 0;\r\n  // -520\r\n\r\n  async onLoad() {\r\n    super.onLoad();\r\n    PhysicsSystem2D.instance.enable = true;\r\n    PhysicsSystem2D.instance.gravity = new Vec2(0, 0);\r\n    // PhysicsSystem2D.instance.gravity = new Vec2(0, -20 * PHYSICS_2D_PTM_RATIO);\r\n    // PhysicsSystem2D.instance.debugDrawFlags =\r\n    //   EPhysics2DDrawFlags.Aabb |\r\n    //   EPhysics2DDrawFlags.Pair |\r\n    //   EPhysics2DDrawFlags.CenterOfMass |\r\n    //   EPhysics2DDrawFlags.Joint |\r\n    //   EPhysics2DDrawFlags.Shape;\r\n\r\n    // this.assetManager = AssetManager.getInstance();\r\n    // const assetResult = await this.assetManager.loadAssets();\r\n\r\n    // this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this, true);\r\n  }\r\n  rollButtonClicked() {\r\n    //\r\n    console.log(\"roll\", this.myForce);\r\n    if (this.myForce == 0) {\r\n      this.coinNum = 0;\r\n      this.roolStart = true;\r\n      this.myTime = new Date();\r\n      if (this.beadArray.length > 0) {\r\n        while (this.beadArray.length > 0) {\r\n          const myBead = this.beadArray[0];\r\n          myBead.removeFromParent();\r\n          myBead.destroy();\r\n          this.beadArray.splice(0, 1);\r\n        }\r\n      }\r\n      const vecArray = [\r\n        new Vec3(-162, -520, 0),\r\n        new Vec3(0, -420, 0),\r\n        new Vec3(162, -520, 0),\r\n      ];\r\n      for (var i = 0; i < 3; i++) {\r\n        const beadNode = instantiate(this.beadPrefab);\r\n        this.nodeLayer.addChild(beadNode);\r\n        beadNode.setPosition(vecArray[i]);\r\n        this.beadArray.push(beadNode);\r\n        beadNode.getComponent(BeadNode).addRandomForce();\r\n      }\r\n    }\r\n  }\r\n\r\n  onTouchStart(event) {\r\n    // console.log(event);\r\n    for (var i in this.beadArray) {\r\n      const myBead = this.beadArray[i];\r\n      const bidRigid = myBead.getComponent(RigidBody2D);\r\n      bidRigid.applyForce(\r\n        new Vec2(50000 + 5000 * Number(i), 20000 + 500 * Number(i)),\r\n        new Vec2(200, 20),\r\n        true\r\n      );\r\n    }\r\n    // bidRigid.applyForceToCenter(new Vec2(20000, 2000), true);\r\n  }\r\n  update(dt) {\r\n    let totalForce = 0;\r\n    for (var i in this.beadArray) {\r\n      const myBead = this.beadArray[i];\r\n      const bidRigid = myBead.getComponent(RigidBody2D);\r\n      const myForce = Math.sqrt(\r\n        Math.pow(bidRigid.linearVelocity.x, 2) +\r\n          Math.pow(bidRigid.linearVelocity.y, 2)\r\n      );\r\n      totalForce += myForce;\r\n    }\r\n    this.myForce = totalForce;\r\n    if (this.roolStart && totalForce > 0 && !this.realStart) {\r\n      this.realStart = true;\r\n    }\r\n    if (this.realStart) {\r\n      if (totalForce == 0) {\r\n        this.roolStart = false;\r\n        this.realStart = false;\r\n        this.moveMonster();\r\n        console.log(\r\n          \"gold : \" + this.coinNum,\r\n          \"time : \" + (new Date().getTime() - this.myTime.getTime()) / 1000\r\n        );\r\n      }\r\n      const timeDiff = (new Date().getTime() - this.myTime.getTime()) / 1000;\r\n      if (timeDiff >= 3) {\r\n        for (var i in this.beadArray) {\r\n          const myBead = this.beadArray[i];\r\n          myBead.getComponent(BeadNode).diminishVelocity(0.95);\r\n        }\r\n      } else if (timeDiff >= 2) {\r\n        for (var i in this.beadArray) {\r\n          const myBead = this.beadArray[i];\r\n          myBead.getComponent(BeadNode).diminishVelocity(0.975);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  addGold(gold) {\r\n    this.coinNum += gold;\r\n  }\r\n\r\n  moveMonster() {\r\n    for (let i in this.monsterArray) {\r\n      const monster = this.monsterArray[i];\r\n      const direction = Math.floor(Math.random() * 4);\r\n      switch (direction) {\r\n        case 0:\r\n          tween(monster)\r\n            .by(0.2, { position: new Vec3(-100, 0, 0) })\r\n            .start();\r\n          break;\r\n        case 1:\r\n          tween(monster)\r\n            .by(0.2, { position: new Vec3(100, 0, 0) })\r\n            .start();\r\n          break;\r\n        case 2:\r\n          tween(monster)\r\n            .by(0.2, { position: new Vec3(0, -100, 0) })\r\n            .start();\r\n          break;\r\n        case 3:\r\n          tween(monster)\r\n            .by(0.2, { position: new Vec3(0, 100, 0) })\r\n            .start();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}
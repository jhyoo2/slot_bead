{"version":3,"sources":["file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Scenes/PinballScene.ts"],"names":["_decorator","Node","PhysicsSystem2D","Vec2","Vec3","RigidBody2D","Prefab","instantiate","tween","UITransform","Size","UIOpacity","BaseScene","BeadNode","ObstacleNode","TileNode","ccclass","property","PinballScene","Date","onLoad","instance","enable","gravity","makeTile","alocateMonster","i","j","tileNode","tilePrefab","addComponent","opacity","tileLayer","addChild","getComponent","setContentSize","setPosition","tileArray","push","tileScript","row","column","occupied","monsterArray","Math","floor","random","idx","getPosition","monsterScript","rollButtonClicked","console","log","myForce","gameStart","beadArray","beadStart","coinNum","roolStart","myTime","length","myBead","removeFromParent","destroy","splice","vecArray","beadNode","beadPrefab","nodeLayer","addRandomForce","myIdx","Number","onTouchStart","event","bidRigid","applyForce","update","dt","totalForce","sqrt","pow","linearVelocity","x","y","realStart","moveMonster","getTime","timeDiff","diminishVelocity","addGold","gold","monster","tryTime","direction","to","position","start"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACEA,MAAAA,U,OAAAA,U;AAGAC,MAAAA,I,OAAAA,I;AACAC,MAAAA,e,OAAAA,e;AACAC,MAAAA,I,OAAAA,I;AAIAC,MAAAA,I,OAAAA,I;AACAC,MAAAA,W,OAAAA,W;AACAC,MAAAA,M,OAAAA,M;AACAC,MAAAA,W,OAAAA,W;AACAC,MAAAA,K,OAAAA,K;AAIAC,MAAAA,W,OAAAA,W;AACAC,MAAAA,I,OAAAA,I;AACAC,MAAAA,S,OAAAA,S;;AAKKC,MAAAA,S;;AAGEC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,Q,iBAAAA,Q;;;;;;;OAPH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBjB,U;;8BAUjBkB,Y,WADZF,OAAO,CAAC,cAAD,C,UAILC,QAAQ,CAAChB,IAAD,C,UAGRgB,QAAQ,CAAChB,IAAD,C,UAGRgB,QAAQ,CAACX,MAAD,C,UAGRW,QAAQ,CAACX,MAAD,C,UAGRW,QAAQ,CAAChB,IAAD,C,UAGRgB,QAAQ,CAAChB,IAAD,C,oCAnBX,MACaiB,YADb;AAAA;AAAA,kCAC4C;AAAA;AAAA;;AAAA,gDACb,IADa;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,2CAqBhC,CArBgC;;AAAA,0CAsB3B,IAAIC,IAAJ,EAtB2B;;AAAA,6CAuB9B,KAvB8B;;AAAA,6CAwB9B,KAxB8B;;AAAA,2CAyBhC,CAzBgC;;AAAA,6CA0B9B,EA1B8B;AAAA;;AA2B1C;AAEY,cAANC,MAAM,GAAG;AACb,gBAAMA,MAAN;AACAlB,UAAAA,eAAe,CAACmB,QAAhB,CAAyBC,MAAzB,GAAkC,IAAlC;AACApB,UAAAA,eAAe,CAACmB,QAAhB,CAAyBE,OAAzB,GAAmC,IAAIpB,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAnC,CAHa,CAIb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA,eAAKqB,QAAL;AACA,eAAKC,cAAL;AACD;;AACDD,QAAAA,QAAQ,GAAG;AACT,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,oBAAMC,QAAQ,GAAGrB,WAAW,CAAC,KAAKsB,UAAN,CAA5B;AACAD,cAAAA,QAAQ,CAACE,YAAT,CAAsBnB,SAAtB,EAAiCoB,OAAjC,GAA2C,KAAK,OAAO,CAACL,CAAC,GAAGC,CAAL,IAAU,CAAjB,CAAhD;AACA,mBAAKK,SAAL,CAAeC,QAAf,CAAwBL,QAAxB;AACAA,cAAAA,QAAQ,CAACM,YAAT,CAAsBzB,WAAtB,EAAmC0B,cAAnC,CAAkD,IAAIzB,IAAJ,CAAS,GAAT,EAAc,GAAd,CAAlD;AACAkB,cAAAA,QAAQ,CAACQ,WAAT,CACE,IAAIhC,IAAJ,CAAS,CAAC,GAAD,GAAO,MAAM,GAAb,GAAmB,MAAMuB,CAAlC,EAAqC,CAAC,GAAD,GAAO,MAAM,GAAb,GAAmB,MAAMD,CAA9D,CADF;AAGA,mBAAKW,SAAL,CAAeC,IAAf,CAAoBV,QAApB;AAEA,oBAAMW,UAAU,GAAGX,QAAQ,CAACM,YAAT;AAAA;AAAA,uCAAnB;AACAK,cAAAA,UAAU,CAACC,GAAX,GAAiBd,CAAjB;AACAa,cAAAA,UAAU,CAACE,MAAX,GAAoBd,CAApB;AACAY,cAAAA,UAAU,CAACG,QAAX,GAAsB,KAAtB;AACD;AACF;AACF;;AACDjB,QAAAA,cAAc,GAAG;AACf,eAAK,IAAIC,CAAT,IAAc,KAAKiB,YAAnB,EAAiC;AAC/B,mBAAO,IAAP,EAAa;AACX,oBAAMH,GAAG,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAA5C;AACA,oBAAML,MAAM,GAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAf;AACA,oBAAMC,GAAG,GAAGP,GAAG,GAAG,CAAN,GAAUC,MAAtB;AACA,oBAAMF,UAAU,GAAG,KAAKF,SAAL,CAAeU,GAAf,EAAoBb,YAApB;AAAA;AAAA,uCAAnB;;AACA,kBAAIK,UAAU,CAACG,QAAf,EAAyB;AACvB;AACD;;AACDH,cAAAA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AACA,mBAAKC,YAAL,CAAkBjB,CAAlB,EAAqBU,WAArB,CAAiC,KAAKC,SAAL,CAAeU,GAAf,EAAoBC,WAApB,EAAjC;AACA,oBAAMC,aAAa,GAAG,KAAKN,YAAL,CAAkBjB,CAAlB,EAAqBQ,YAArB;AAAA;AAAA,+CAAtB;AACAe,cAAAA,aAAa,CAACT,GAAd,GAAoBA,GAApB;AACAS,cAAAA,aAAa,CAACR,MAAd,GAAuBA,MAAvB;AACA;AACD;AACF;AACF;;AAEDS,QAAAA,iBAAiB,GAAG;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKC,OAAzB;AACA,cAAIC,SAAS,GAAG,IAAhB;;AACA,eAAK,IAAI5B,CAAT,IAAc,KAAK6B,SAAnB,EAA8B;AAC5B,gBAAI,KAAKA,SAAL,CAAe7B,CAAf,EAAkBQ,YAAlB;AAAA;AAAA,sCAAyCsB,SAA7C,EAAwD;AACtDF,cAAAA,SAAS,GAAG,KAAZ;AACD;AACF;;AAED,cAAIA,SAAJ,EAAe;AACb,iBAAKG,OAAL,GAAe,CAAf;AACA,iBAAKC,SAAL,GAAiB,IAAjB;AACA,iBAAKC,MAAL,GAAc,IAAIxC,IAAJ,EAAd;;AACA,gBAAI,KAAKoC,SAAL,CAAeK,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,qBAAO,KAAKL,SAAL,CAAeK,MAAf,GAAwB,CAA/B,EAAkC;AAChC,sBAAMC,MAAM,GAAG,KAAKN,SAAL,CAAe,CAAf,CAAf;AACAM,gBAAAA,MAAM,CAACC,gBAAP;AACAD,gBAAAA,MAAM,CAACE,OAAP;AACA,qBAAKR,SAAL,CAAeS,MAAf,CAAsB,CAAtB,EAAyB,CAAzB;AACD;AACF;;AACD,kBAAMC,QAAQ,GAAG,CACf,IAAI7D,IAAJ,CAAS,CAAC,GAAV,EAAe,CAAC,GAAhB,EAAqB,CAArB,CADe,EAEf,IAAIA,IAAJ,CAAS,CAAT,EAAY,CAAC,GAAb,EAAkB,CAAlB,CAFe,EAGf,IAAIA,IAAJ,CAAS,GAAT,EAAc,CAAC,GAAf,EAAoB,CAApB,CAHe,CAAjB;;AAKA,iBAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,oBAAMwC,QAAQ,GAAG3D,WAAW,CAAC,KAAK4D,UAAN,CAA5B;AACA,mBAAKC,SAAL,CAAenC,QAAf,CAAwBiC,QAAxB;AACAA,cAAAA,QAAQ,CAAC9B,WAAT,CAAqB6B,QAAQ,CAACvC,CAAD,CAA7B;AACA,mBAAK6B,SAAL,CAAejB,IAAf,CAAoB4B,QAApB;AACAA,cAAAA,QAAQ,CAAChC,YAAT;AAAA;AAAA,wCAAgCmC,cAAhC;AACAH,cAAAA,QAAQ,CAAChC,YAAT;AAAA;AAAA,wCAAgCoC,KAAhC,GAAwCC,MAAM,CAAC7C,CAAD,CAA9C;AACD;AACF;AACF;;AAED8C,QAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB;AACA,eAAK,IAAI/C,CAAT,IAAc,KAAK6B,SAAnB,EAA8B;AAC5B,kBAAMM,MAAM,GAAG,KAAKN,SAAL,CAAe7B,CAAf,CAAf;AACA,kBAAMgD,QAAQ,GAAGb,MAAM,CAAC3B,YAAP,CAAoB7B,WAApB,CAAjB;AACAqE,YAAAA,QAAQ,CAACC,UAAT,CACE,IAAIxE,IAAJ,CAAS,QAAQ,OAAOoE,MAAM,CAAC7C,CAAD,CAA9B,EAAmC,QAAQ,MAAM6C,MAAM,CAAC7C,CAAD,CAAvD,CADF,EAEE,IAAIvB,IAAJ,CAAS,GAAT,EAAc,EAAd,CAFF,EAGE,IAHF;AAKD,WAViB,CAWlB;;AACD;;AACDyE,QAAAA,MAAM,CAACC,EAAD,EAAK;AACT,cAAIC,UAAU,GAAG,CAAjB;;AACA,eAAK,IAAIpD,CAAT,IAAc,KAAK6B,SAAnB,EAA8B;AAC5B,kBAAMM,MAAM,GAAG,KAAKN,SAAL,CAAe7B,CAAf,CAAf;AACA,kBAAMgD,QAAQ,GAAGb,MAAM,CAAC3B,YAAP,CAAoB7B,WAApB,CAAjB;AACA,kBAAMgD,OAAO,GAAGT,IAAI,CAACmC,IAAL,CACdnC,IAAI,CAACoC,GAAL,CAASN,QAAQ,CAACO,cAAT,CAAwBC,CAAjC,EAAoC,CAApC,IACEtC,IAAI,CAACoC,GAAL,CAASN,QAAQ,CAACO,cAAT,CAAwBE,CAAjC,EAAoC,CAApC,CAFY,CAAhB;AAIAL,YAAAA,UAAU,IAAIzB,OAAd;AACD;;AACD,eAAKA,OAAL,GAAeyB,UAAf;;AACA,cAAI,KAAKpB,SAAL,IAAkBoB,UAAU,GAAG,CAA/B,IAAoC,CAAC,KAAKM,SAA9C,EAAyD;AACvD,iBAAKA,SAAL,GAAiB,IAAjB;AACD;;AACD,cAAI,KAAKA,SAAT,EAAoB;AAClB,gBAAIN,UAAU,IAAI,CAAlB,EAAqB;AACnB,mBAAKpB,SAAL,GAAiB,KAAjB;AACA,mBAAK0B,SAAL,GAAiB,KAAjB;AACA,mBAAKC,WAAL;AACAlC,cAAAA,OAAO,CAACC,GAAR,CACE,YAAY,KAAKK,OADnB,EAEE,YAAY,CAAC,IAAItC,IAAJ,GAAWmE,OAAX,KAAuB,KAAK3B,MAAL,CAAY2B,OAAZ,EAAxB,IAAiD,IAF/D;AAID;AACF;;AAED,gBAAMC,QAAQ,GAAG,CAAC,IAAIpE,IAAJ,GAAWmE,OAAX,KAAuB,KAAK3B,MAAL,CAAY2B,OAAZ,EAAxB,IAAiD,IAAlE;;AACA,cAAIC,QAAQ,IAAI,CAAhB,EAAmB;AACjB,iBAAK,IAAI7D,CAAT,IAAc,KAAK6B,SAAnB,EAA8B;AAC5B,oBAAMM,MAAM,GAAG,KAAKN,SAAL,CAAe7B,CAAf,CAAf;AACAmC,cAAAA,MAAM,CACH3B,YADH;AAAA;AAAA,wCAEGsD,gBAFH,CAEoB,OAAO,QAAQjB,MAAM,CAAC7C,CAAD,CAFzC;AAGD;AACF,WAPD,MAOO,IAAI6D,QAAQ,IAAI,CAAhB,EAAmB;AACxB,iBAAK,IAAI7D,CAAT,IAAc,KAAK6B,SAAnB,EAA8B;AAC5B,oBAAMM,MAAM,GAAG,KAAKN,SAAL,CAAe7B,CAAf,CAAf;AACAmC,cAAAA,MAAM,CACH3B,YADH;AAAA;AAAA,wCAEGsD,gBAFH,CAEoB,QAAQ,QAAQjB,MAAM,CAAC7C,CAAD,CAF1C;AAGD;AACF;AACF;;AAED+D,QAAAA,OAAO,CAACC,IAAD,EAAO;AACZ,eAAKjC,OAAL,IAAgBiC,IAAhB;AACD;;AAEDL,QAAAA,WAAW,GAAG;AACZ,eAAK,IAAI3D,CAAT,IAAc,KAAKiB,YAAnB,EAAiC;AAC/B,kBAAMgD,OAAO,GAAG,KAAKhD,YAAL,CAAkBjB,CAAlB,CAAhB;AACA,kBAAMuB,aAAa,GAAG,KAAKN,YAAL,CAAkBjB,CAAlB,EAAqBQ,YAArB;AAAA;AAAA,6CAAtB;AACA,gBAAI0D,OAAO,GAAG,CAAd;;AACA,mBAAOA,OAAO,GAAG,GAAjB,EAAsB;AACpBA,cAAAA,OAAO;AACP,oBAAMC,SAAS,GAAGjD,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAlB;AACA,kBAAIN,GAAG,GAAG,CAAV;AACA,kBAAIC,MAAM,GAAG,CAAb;;AACA,sBAAQoD,SAAR;AACE,qBAAK,CAAL;AACErD,kBAAAA,GAAG,GAAG,CAAC,CAAP;AACA;;AACF,qBAAK,CAAL;AACEA,kBAAAA,GAAG,GAAG,CAAN;AACA;;AACF,qBAAK,CAAL;AACEC,kBAAAA,MAAM,GAAG,CAAC,CAAV;AACA;;AACF,qBAAK,CAAL;AACEA,kBAAAA,MAAM,GAAG,CAAT;AACA;AAZJ;;AAcAD,cAAAA,GAAG,IAAIS,aAAa,CAACT,GAArB;;AACA,kBAAIA,GAAG,GAAG,CAAN,IAAWA,GAAG,IAAI,EAAtB,EAA0B;AACxB;AACD;;AACDC,cAAAA,MAAM,IAAIQ,aAAa,CAACR,MAAxB;;AACA,kBAAIA,MAAM,GAAG,CAAT,IAAcA,MAAM,IAAI,CAA5B,EAA+B;AAC7B;AACD;;AACD,oBAAMM,GAAG,GAAGP,GAAG,GAAG,CAAN,GAAUC,MAAtB,CA3BoB,CA4BpB;;AACA,oBAAMF,UAAU,GAAG,KAAKF,SAAL,CAAeU,GAAf,EAAoBb,YAApB;AAAA;AAAA,uCAAnB;;AACA,kBAAIK,UAAU,CAACG,QAAf,EAAyB;AACvB;AACD;;AACD,mBAAKL,SAAL,CACEY,aAAa,CAACT,GAAd,GAAoB,CAApB,GAAwBS,aAAa,CAACR,MADxC,EAEEP,YAFF;AAAA;AAAA,wCAEyBQ,QAFzB,GAEoC,KAFpC;AAGAH,cAAAA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AACAO,cAAAA,aAAa,CAACT,GAAd,GAAoBA,GAApB;AACAS,cAAAA,aAAa,CAACR,MAAd,GAAuBA,MAAvB;AACAjC,cAAAA,KAAK,CAACmF,OAAD,CAAL,CACGG,EADH,CACM,GADN,EACW;AAAEC,gBAAAA,QAAQ,EAAE,KAAK1D,SAAL,CAAeU,GAAf,EAAoBC,WAApB;AAAZ,eADX,EAEGgD,KAFH;AAGAJ,cAAAA,OAAO,GAAG,CAAV;AACA;AACD;AACF;AACF;;AA7OyC,O;;;;;iBAIjB,I;;;;;;;iBAGA,I;;;;;;;iBAGG,I;;;;;;;iBAGA,I;;;;;;;iBAGR,E;;;;;;;iBAGG,E","sourcesContent":["import {\r\n  _decorator,\r\n  size,\r\n  director,\r\n  Node,\r\n  PhysicsSystem2D,\r\n  Vec2,\r\n  PHYSICS_2D_PTM_RATIO,\r\n  EPhysics2DDrawFlags,\r\n  RigidBody,\r\n  Vec3,\r\n  RigidBody2D,\r\n  Prefab,\r\n  instantiate,\r\n  tween,\r\n  SpriteAtlas,\r\n  Sprite,\r\n  SpriteFrame,\r\n  UITransform,\r\n  Size,\r\n  UIOpacity,\r\n  ObjectCurve,\r\n} from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\nimport BaseScene from \"../BaseObject/BaseScene\";\r\nimport AssetManager from \"../DataManager/AssetManager\";\r\nimport BaseRoom from \"../Prefabs/Room/BaseRoom\";\r\nimport { BeadNode } from \"./BeadNode\";\r\nimport { ObstacleNode } from \"./ObstacleNode\";\r\nimport { TileNode } from \"./TileNode\";\r\n\r\n@ccclass(\"PinballScene\")\r\nexport class PinballScene extends BaseScene {\r\n  assetManager: AssetManager = null;\r\n\r\n  @property(Node)\r\n  tileLayer: Node | null = null;\r\n\r\n  @property(Node)\r\n  nodeLayer: Node | null = null;\r\n\r\n  @property(Prefab)\r\n  beadPrefab: Prefab | null = null;\r\n\r\n  @property(Prefab)\r\n  tilePrefab: Prefab | null = null;\r\n\r\n  @property(Node)\r\n  beadArray: Node[] = [];\r\n\r\n  @property(Node)\r\n  monsterArray: Node[] = [];\r\n\r\n  myForce = 0;\r\n  myTime: Date = new Date();\r\n  roolStart = false;\r\n  realStart = false;\r\n  coinNum = 0;\r\n  tileArray = [];\r\n  // -520\r\n\r\n  async onLoad() {\r\n    super.onLoad();\r\n    PhysicsSystem2D.instance.enable = true;\r\n    PhysicsSystem2D.instance.gravity = new Vec2(0, 0);\r\n    // PhysicsSystem2D.instance.gravity = new Vec2(0, -20 * PHYSICS_2D_PTM_RATIO);\r\n    // PhysicsSystem2D.instance.debugDrawFlags =\r\n    //   EPhysics2DDrawFlags.Aabb |\r\n    //   EPhysics2DDrawFlags.Pair |\r\n    //   EPhysics2DDrawFlags.CenterOfMass |\r\n    //   EPhysics2DDrawFlags.Joint |\r\n    //   EPhysics2DDrawFlags.Shape;\r\n\r\n    // this.assetManager = AssetManager.getInstance();\r\n    // const assetResult = await this.assetManager.loadAssets();\r\n\r\n    // this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this, true);\r\n    this.makeTile();\r\n    this.alocateMonster();\r\n  }\r\n  makeTile() {\r\n    for (var i = 0; i < 12; i++) {\r\n      for (var j = 0; j < 8; j++) {\r\n        const tileNode = instantiate(this.tilePrefab);\r\n        tileNode.addComponent(UIOpacity).opacity = 50 + 100 * ((i + j) % 2);\r\n        this.tileLayer.addChild(tileNode);\r\n        tileNode.getComponent(UITransform).setContentSize(new Size(110, 114));\r\n        tileNode.setPosition(\r\n          new Vec3(-440 + 110 * 0.5 + 110 * j, -750 + 114 * 0.5 + 114 * i)\r\n        );\r\n        this.tileArray.push(tileNode);\r\n\r\n        const tileScript = tileNode.getComponent(TileNode);\r\n        tileScript.row = i;\r\n        tileScript.column = j;\r\n        tileScript.occupied = false;\r\n      }\r\n    }\r\n  }\r\n  alocateMonster() {\r\n    for (let i in this.monsterArray) {\r\n      while (true) {\r\n        const row = Math.floor(Math.random() * 6) + 5;\r\n        const column = Math.floor(Math.random() * 8);\r\n        const idx = row * 8 + column;\r\n        const tileScript = this.tileArray[idx].getComponent(TileNode);\r\n        if (tileScript.occupied) {\r\n          continue;\r\n        }\r\n        tileScript.occupied = true;\r\n        this.monsterArray[i].setPosition(this.tileArray[idx].getPosition());\r\n        const monsterScript = this.monsterArray[i].getComponent(ObstacleNode);\r\n        monsterScript.row = row;\r\n        monsterScript.column = column;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  rollButtonClicked() {\r\n    console.log(\"roll\", this.myForce);\r\n    let gameStart = true;\r\n    for (var i in this.beadArray) {\r\n      if (this.beadArray[i].getComponent(BeadNode).beadStart) {\r\n        gameStart = false;\r\n      }\r\n    }\r\n\r\n    if (gameStart) {\r\n      this.coinNum = 0;\r\n      this.roolStart = true;\r\n      this.myTime = new Date();\r\n      if (this.beadArray.length > 0) {\r\n        while (this.beadArray.length > 0) {\r\n          const myBead = this.beadArray[0];\r\n          myBead.removeFromParent();\r\n          myBead.destroy();\r\n          this.beadArray.splice(0, 1);\r\n        }\r\n      }\r\n      const vecArray = [\r\n        new Vec3(-162, -520, 0),\r\n        new Vec3(0, -420, 0),\r\n        new Vec3(162, -520, 0),\r\n      ];\r\n      for (let i = 0; i < 3; i++) {\r\n        const beadNode = instantiate(this.beadPrefab);\r\n        this.nodeLayer.addChild(beadNode);\r\n        beadNode.setPosition(vecArray[i]);\r\n        this.beadArray.push(beadNode);\r\n        beadNode.getComponent(BeadNode).addRandomForce();\r\n        beadNode.getComponent(BeadNode).myIdx = Number(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  onTouchStart(event) {\r\n    // console.log(event);\r\n    for (var i in this.beadArray) {\r\n      const myBead = this.beadArray[i];\r\n      const bidRigid = myBead.getComponent(RigidBody2D);\r\n      bidRigid.applyForce(\r\n        new Vec2(50000 + 5000 * Number(i), 20000 + 500 * Number(i)),\r\n        new Vec2(200, 20),\r\n        true\r\n      );\r\n    }\r\n    // bidRigid.applyForceToCenter(new Vec2(20000, 2000), true);\r\n  }\r\n  update(dt) {\r\n    let totalForce = 0;\r\n    for (var i in this.beadArray) {\r\n      const myBead = this.beadArray[i];\r\n      const bidRigid = myBead.getComponent(RigidBody2D);\r\n      const myForce = Math.sqrt(\r\n        Math.pow(bidRigid.linearVelocity.x, 2) +\r\n          Math.pow(bidRigid.linearVelocity.y, 2)\r\n      );\r\n      totalForce += myForce;\r\n    }\r\n    this.myForce = totalForce;\r\n    if (this.roolStart && totalForce > 0 && !this.realStart) {\r\n      this.realStart = true;\r\n    }\r\n    if (this.realStart) {\r\n      if (totalForce == 0) {\r\n        this.roolStart = false;\r\n        this.realStart = false;\r\n        this.moveMonster();\r\n        console.log(\r\n          \"gold : \" + this.coinNum,\r\n          \"time : \" + (new Date().getTime() - this.myTime.getTime()) / 1000\r\n        );\r\n      }\r\n    }\r\n\r\n    const timeDiff = (new Date().getTime() - this.myTime.getTime()) / 1000;\r\n    if (timeDiff >= 3) {\r\n      for (var i in this.beadArray) {\r\n        const myBead = this.beadArray[i];\r\n        myBead\r\n          .getComponent(BeadNode)\r\n          .diminishVelocity(0.95 + 0.005 * Number(i));\r\n      }\r\n    } else if (timeDiff >= 2) {\r\n      for (var i in this.beadArray) {\r\n        const myBead = this.beadArray[i];\r\n        myBead\r\n          .getComponent(BeadNode)\r\n          .diminishVelocity(0.975 + 0.005 * Number(i));\r\n      }\r\n    }\r\n  }\r\n\r\n  addGold(gold) {\r\n    this.coinNum += gold;\r\n  }\r\n\r\n  moveMonster() {\r\n    for (let i in this.monsterArray) {\r\n      const monster = this.monsterArray[i];\r\n      const monsterScript = this.monsterArray[i].getComponent(ObstacleNode);\r\n      let tryTime = 0;\r\n      while (tryTime < 100) {\r\n        tryTime++;\r\n        const direction = Math.floor(Math.random() * 4);\r\n        let row = 0;\r\n        let column = 0;\r\n        switch (direction) {\r\n          case 0:\r\n            row = -1;\r\n            break;\r\n          case 1:\r\n            row = 1;\r\n            break;\r\n          case 2:\r\n            column = -1;\r\n            break;\r\n          case 3:\r\n            column = 1;\r\n            break;\r\n        }\r\n        row += monsterScript.row;\r\n        if (row < 5 || row >= 11) {\r\n          continue;\r\n        }\r\n        column += monsterScript.column;\r\n        if (column < 0 || column >= 8) {\r\n          continue;\r\n        }\r\n        const idx = row * 8 + column;\r\n        // console.log(monsterScript.row, monsterScript.column, row, column, idx);\r\n        const tileScript = this.tileArray[idx].getComponent(TileNode);\r\n        if (tileScript.occupied) {\r\n          continue;\r\n        }\r\n        this.tileArray[\r\n          monsterScript.row * 8 + monsterScript.column\r\n        ].getComponent(TileNode).occupied = false;\r\n        tileScript.occupied = true;\r\n        monsterScript.row = row;\r\n        monsterScript.column = column;\r\n        tween(monster)\r\n          .to(0.2, { position: this.tileArray[idx].getPosition() })\r\n          .start();\r\n        tryTime = 0;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}
{"version":3,"sources":["file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Slot/SlotLine.ts"],"names":["_decorator","Component","Node","UITransform","instantiate","v3","tween","Tween","Vec3","AssetManager","ccclass","property","SlotLine","initSlotLine","lineIdx","slotData","assetManager","getInstance","contentLayer","getComponent","setContentSize","railSize","iconPrefab","prefabDic","i","rowNum","iconObject","insertChild","setPosition","getIconPosition","iconScript","iconData","rowIdx","iconKind","Math","floor","random","backKind","initIcon","iconArray","push","iconSize","height","iconDiff","slotStartInfinity","slotSpeed","self","node","tag","repeatForever","call","lineMove","addRandomIcon","delay","start","stopSlot","moveNum","time","callback","stopAllByTag","slotStart","spinTime","repeat","addIcon","getIconKind","eraseTarget","j","updateNumber","myPos","to","position","y","removeNode","splice","indexOf","slotDataDic","getIconObject","removeFromParent"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  Node,\n  UITransform,\n  instantiate,\n  v3,\n  tween,\n  Tween,\n  Vec3,\n} from \"cc\";\nconst { ccclass, property } = _decorator;\n\nimport AssetManager from \"../../DataManager/AssetManager\";\nimport SlotIcon from \"./SlotIcon\";\n\n@ccclass(\"SlotLine\")\nexport default class SlotLine extends Component {\n  @property(Node)\n  contentLayer: Node | null = null;\n  assetManager: AssetManager = null;\n  lineIdx: number;\n  slotData: any;\n  iconArray: Node[] = [];\n  initSlotLine(lineIdx, slotData) {\n    this.lineIdx = lineIdx;\n    this.slotData = slotData;\n    this.assetManager = AssetManager.getInstance();\n    this.contentLayer\n      .getComponent(UITransform)\n      .setContentSize(slotData.railSize);\n    const iconPrefab = this.assetManager.prefabDic[\"SlotIcon\"];\n    for (var i = 0; i < this.slotData.rowNum + 4; i++) {\n      const iconObject = instantiate(iconPrefab);\n      this.contentLayer.insertChild(iconObject, 10);\n      iconObject.setPosition(this.getIconPosition(i));\n      // //   console.log(this.lineIdx, i, this.getLinePos(i).y);\n      const iconScript: SlotIcon = iconObject.getComponent(\"SlotIcon\");\n      iconScript.iconData.rowIdx = i - 2;\n      const iconKind = Math.floor(Math.random() * 5) + 1;\n      const backKind = Math.floor(Math.random() * 3) + 1;\n      iconScript.initIcon(iconKind, backKind, this.slotData);\n      this.iconArray.push(iconObject);\n    }\n  }\n  getIconPosition(rowIdx) {\n    return v3(\n      0,\n      (-(this.slotData.rowNum + 4) / 2) *\n        (this.slotData.iconSize.height + this.slotData.iconDiff) +\n        (this.slotData.iconSize.height + this.slotData.iconDiff) *\n          (rowIdx + 0.5)\n    );\n  }\n  slotStartInfinity(slotSpeed) {\n    var self = this;\n    tween(this.node)\n      .tag(108)\n      .repeatForever(\n        tween()\n          .call(() => {\n            self.lineMove(slotSpeed);\n            self.addRandomIcon();\n          })\n          .delay(slotSpeed)\n      )\n      .start();\n  }\n  stopSlot(moveNum, time, callback, iconData?) {\n    // // console.log(this.lineIdx, iconData);\n    Tween.stopAllByTag(108, this.node);\n    this.slotStart(moveNum, time, callback, iconData);\n  }\n  slotStart(moveNum, time, callback, iconData?) {\n    var self = this;\n    var spinTime = 0;\n    tween(this.node)\n      .repeat(\n        moveNum,\n        tween()\n          .call(() => {\n            spinTime++;\n            self.lineMove(time / moveNum);\n            if (spinTime == moveNum - 2) {\n              if (iconData) {\n                self.addIcon(iconData);\n              } else {\n                self.addRandomIcon();\n              }\n            } else {\n              self.addRandomIcon();\n            }\n          })\n          .delay(time / moveNum)\n      )\n      .call(() => {\n        callback(this.lineIdx, this.getIconKind());\n      })\n      .start();\n  }\n  lineMove(time) {\n    var self = this;\n    var eraseTarget = null;\n    for (var j in this.iconArray) {\n      const iconObject = this.iconArray[j];\n      const iconScript = iconObject.getComponent(\"SlotIcon\") as SlotIcon;\n      iconScript.iconData.rowIdx--;\n      iconScript.updateNumber();\n      const myPos = this.getIconPosition(iconScript.iconData.rowIdx + 2);\n      // //   console.log(this.lineIdx, j, iconScript.iconData.rowIdx, myPos.y);\n      tween(iconObject)\n        .to(time, { position: new Vec3(0, myPos.y, 0) })\n        .start();\n      if (iconScript.iconData.rowIdx == -3) {\n        // // console.log(iconObject);\n        eraseTarget = iconObject;\n      }\n    }\n    if (eraseTarget) {\n      tween(eraseTarget)\n        .delay(time)\n        .call(() => {\n          self.removeNode(eraseTarget);\n        })\n        .start();\n      this.iconArray.splice(this.iconArray.indexOf(eraseTarget), 1);\n    }\n  }\n  addRandomIcon() {\n    const iconPrefab = this.assetManager.prefabDic[\"SlotIcon\"];\n    const iconObject = instantiate(iconPrefab);\n    this.contentLayer.insertChild(iconObject, 10);\n    iconObject.setPosition(this.getIconPosition(4));\n    // //   console.log(this.lineIdx, i, this.getLinePos(i).y);\n    const iconScript: SlotIcon = iconObject.getComponent(\"SlotIcon\");\n    iconScript.iconData.rowIdx = 4 - 2;\n    const iconKind = Math.floor(Math.random() * 5) + 1;\n    const backKind = Math.floor(Math.random() * 3) + 1;\n    iconScript.initIcon(iconKind, backKind, this.slotData);\n    this.iconArray.push(iconObject);\n  }\n  addIcon(iconData) {\n    const iconPrefab = this.assetManager.prefabDic[\"SlotIcon\"];\n    const iconObject = instantiate(iconPrefab);\n    this.contentLayer.insertChild(iconObject, 10);\n    iconObject.setPosition(this.getIconPosition(4));\n    // //   console.log(this.lineIdx, i, this.getLinePos(i).y);\n    const iconScript: SlotIcon = iconObject.getComponent(\"SlotIcon\");\n    iconScript.iconData.rowIdx = 4 - 2;\n    iconScript.initIcon(iconData.iconKind, iconData.backKind, this.slotData);\n    this.iconArray.push(iconObject);\n  }\n  getIconKind() {\n    const slotDataDic = {};\n    for (var j in this.iconArray) {\n      const iconObject = this.iconArray[j];\n      const iconScript = iconObject.getComponent(\"SlotIcon\") as SlotIcon;\n      slotDataDic[iconScript.iconData.rowIdx] = iconScript.iconData;\n    }\n    return slotDataDic;\n  }\n  getIconObject(rowIdx) {\n    for (var j in this.iconArray) {\n      const iconObject = this.iconArray[j];\n      const iconScript = iconObject.getComponent(\"SlotIcon\") as SlotIcon;\n      if (iconScript.iconData.rowIdx === rowIdx) {\n        return iconObject;\n      }\n    }\n    return null;\n  }\n  removeNode(node) {\n    node.removeFromParent(true);\n  }\n}\n"]}
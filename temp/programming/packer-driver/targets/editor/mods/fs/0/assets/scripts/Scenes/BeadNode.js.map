{"version":3,"sources":["file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Scenes/BeadNode.ts"],"names":["_decorator","Node","Vec2","RigidBody2D","SpriteFrame","Sprite","Collider2D","Contact2DType","BaseScene","ccclass","property","BeadNode","Boolean","onLoad","myColor","Math","floor","random","node","getComponent","spriteFrame","beadFrame","collider","on","BEGIN_CONTACT","onBeginContact","activateBead","coverNode","active","selfCollider","otherCollider","contact","beadStart","myRigid","linearVelocity","max","maxVelocity","x","y","addRandomForce","bidRigid","myForce","applyForce","diminishVelocity","rate","update","dt","sqrt","pow","maxForce","preVelo","angularVelocity"],"mappings":"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","sourcesContent":["import {\r\n  _decorator,\r\n  size,\r\n  director,\r\n  Node,\r\n  PhysicsSystem2D,\r\n  Vec2,\r\n  PHYSICS_2D_PTM_RATIO,\r\n  EPhysics2DDrawFlags,\r\n  RigidBody,\r\n  Vec3,\r\n  RigidBody2D,\r\n  Prefab,\r\n  instantiate,\r\n  SpriteFrame,\r\n  Sprite,\r\n  UIOpacityComponent,\r\n  Collider2D,\r\n  Contact2DType,\r\n  IPhysics2DContact,\r\n} from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\nimport BaseScene from \"../BaseObject/BaseScene\";\r\nimport AssetManager from \"../DataManager/AssetManager\";\r\nimport BaseRoom from \"../Prefabs/Room/BaseRoom\";\r\n\r\n@ccclass(\"BeadNode\")\r\nexport class BeadNode extends BaseScene {\r\n  @property(Boolean)\r\n  beadStart = false;\r\n  myForce = 0;\r\n  myColor = 0;\r\n\r\n  @property(Node)\r\n  coverNode: Node | null = null;\r\n\r\n  @property(SpriteFrame)\r\n  beadFrame: SpriteFrame[] = [];\r\n\r\n  maxForce = 0;\r\n  maxVelocity = new Vec2(0, 0);\r\n\r\n  async onLoad() {\r\n    super.onLoad();\r\n    const myColor = Math.floor(Math.random() * 5) + 1;\r\n    this.node.getComponent(Sprite).spriteFrame = this.beadFrame[myColor];\r\n    let collider = this.getComponent(Collider2D);\r\n    if (collider) {\r\n      collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n    }\r\n  }\r\n  activateBead() {\r\n    this.coverNode.active = true;\r\n  }\r\n\r\n  onBeginContact(\r\n    selfCollider: Collider2D,\r\n    otherCollider: Collider2D,\r\n    contact: IPhysics2DContact | null\r\n  ) {\r\n    if (this.beadStart) {\r\n      const myColor = Math.floor(Math.random() * 5) + 1;\r\n      this.node.getComponent(Sprite).spriteFrame = this.beadFrame[myColor];\r\n    }\r\n    if (otherCollider.node.getComponent(BeadNode)) {\r\n      const myRigid = this.node.getComponent(RigidBody2D);\r\n      myRigid.linearVelocity = new Vec2(\r\n        Math.max(this.maxVelocity.x, myRigid.linearVelocity.x * 2.2),\r\n        Math.max(this.maxVelocity.y, myRigid.linearVelocity.y * 2.2)\r\n      );\r\n    }\r\n  }\r\n\r\n  addRandomForce() {\r\n    this.beadStart = true;\r\n    const bidRigid = this.node.getComponent(RigidBody2D);\r\n    const myForce = new Vec2(\r\n      -20000 + 40000 * Math.random(),\r\n      90000 + 30000 * Math.random()\r\n    );\r\n    bidRigid.applyForce(\r\n      myForce,\r\n      new Vec2(myForce.x / 100, myForce.y / 100),\r\n      true\r\n    );\r\n  }\r\n\r\n  diminishVelocity(rate) {\r\n    const bidRigid = this.node.getComponent(RigidBody2D);\r\n    bidRigid.linearVelocity = new Vec2(\r\n      bidRigid.linearVelocity.x * rate,\r\n      bidRigid.linearVelocity.y * rate\r\n    );\r\n    this.maxVelocity = new Vec2(\r\n      this.maxVelocity.x * rate,\r\n      this.maxVelocity.y * rate\r\n    );\r\n  }\r\n\r\n  update(dt) {\r\n    if (!this.beadStart) {\r\n      return;\r\n    }\r\n    const bidRigid = this.node.getComponent(RigidBody2D);\r\n\r\n    const myForce = Math.sqrt(\r\n      Math.pow(bidRigid.linearVelocity.x, 2) +\r\n        Math.pow(bidRigid.linearVelocity.y, 2)\r\n    );\r\n    if (this.maxForce < myForce) {\r\n      this.maxForce = myForce;\r\n      this.maxVelocity = new Vec2(\r\n        bidRigid.linearVelocity.x,\r\n        bidRigid.linearVelocity.y\r\n      );\r\n    }\r\n    this.myForce += myForce;\r\n    if (myForce > 0) {\r\n      const preVelo = bidRigid.linearVelocity;\r\n      if (myForce <= 0.1) {\r\n        bidRigid.linearVelocity = new Vec2(0, 0);\r\n        bidRigid.angularVelocity = 0;\r\n        // this.coverNode.getComponent(UIOpacityComponent).opacity = 0;\r\n        this.beadStart = false;\r\n      } else if (myForce > 10) {\r\n        bidRigid.linearVelocity = new Vec2(\r\n          preVelo.x * 0.9975,\r\n          preVelo.y * 0.9975\r\n        );\r\n      } else if (myForce > 1) {\r\n        bidRigid.linearVelocity = new Vec2(\r\n          preVelo.x * 0.985,\r\n          preVelo.y * 0.985\r\n        );\r\n      } else {\r\n        bidRigid.linearVelocity = new Vec2(preVelo.x * 0.95, preVelo.y * 0.95);\r\n      }\r\n      if (myForce <= 3) {\r\n        // this.coverNode.getComponent(UIOpacityComponent).opacity =\r\n        //   (myForce / 3) * 255;\r\n      }\r\n    }\r\n    // console.log(myForce);\r\n  }\r\n}\r\n"]}
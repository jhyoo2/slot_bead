{"version":3,"sources":["cce:/internal/x/prerequisite-imports"],"names":["requests","request","_err"],"mappings":";;;;;;AACA;AAEA,YAAM,CAAC,YAAY;AACf,cAAMA,QAAQ,GAAG,CAAC,uCAAD,EAA2G,uCAA3G,EAAsN,uCAAtN,EAA0T,uCAA1T,EAA6Z,uCAA7Z,EAA2gB,uCAA3gB,EAA2mB,uCAA3mB,EAAutB,uCAAvtB,EAAo0B,uCAAp0B,EAAg7B,uCAAh7B,EAA2hC,wCAA3hC,EAAwoC,wCAAxoC,EAAovC,wCAApvC,EAAg2C,wCAAh2C,EAA28C,wCAA38C,EAAwjD,wCAAxjD,EAAmqD,wCAAnqD,EAAgxD,wCAAhxD,EAAy3D,wCAAz3D,EAAy+D,wCAAz+D,EAAolE,wCAAplE,EAAgsE,wCAAhsE,EAA+yE,wCAA/yE,EAA05E,wCAA15E,EAAqgF,wCAArgF,EAAknF,wCAAlnF,EAA2tF,wCAA3tF,EAAg0F,wCAAh0F,EAAy6F,wCAAz6F,EAAkhG,wCAAlhG,CAAjB;;AACA,aAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC5B,cAAI;AACA,kBAAMC,OAAO,EAAb;AACH,WAFD,CAEE,OAAOC,IAAP,EAAa,CACX;AACH;AACJ;AACJ,OATK,GAAN","sourcesContent":["\n// Auto generated represents the prerequisite imports of project modules.\n\nawait (async () => {\n    const requests = [() => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/BaseObject/BaseScene.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/BaseObject/ModalLayer.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Common/CCUtils.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Common/Module.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/DataManager/AssetManager.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Helloworld.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Deco/DecoAlert.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Deco/DecoMaster.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Deco/DecoTypes.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Deco/FileList.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Deco/FileMaster.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Deco/FileTitle.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Deco/ImageNode.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Deco/ListView.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Deco/VectorList.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Dice/DiceIcon.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Dice/DiceMaster.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/DiceManager.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/DiceScene/TileRail.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Room/BaseRoom.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Room/RoomBlock.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Room/RoomTemplate.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Slot/SlotIcon.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Slot/SlotLine.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/Slot/SlotMaster.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Prefabs/SlotManager.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Scenes/BeadNode.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Scenes/ObstacleNode.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Scenes/PinballScene.ts\"), () => import(\"file:///Users/david/Desktop/David/cocos/slot_bead/assets/scripts/Scenes/TileNode.ts\")];\n    for (const request of requests) {\n        try {\n            await request();\n        } catch (_err) {\n            // The error should have been caught by executor.\n        }\n    }\n})();\n    "]}